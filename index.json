{
  "stats": {
    "suites": 13,
    "tests": 176,
    "passes": 173,
    "pending": 0,
    "failures": 3,
    "start": "2022-05-12T09:11:15.182Z",
    "end": "2022-05-12T10:17:11.787Z",
    "duration": 2214150,
    "testsRegistered": 176,
    "passPercent": 98.29545454545455,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "04216c28-54e6-458c-a073-0a0d1062b049",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/dark_web.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/dark_web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
          "title": "Dark Web Monitoring",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company DWM : Default items should visible",
              "fullTitle": "Dark Web Monitoring My Company DWM : Default items should visible",
              "timedOut": null,
              "duration": 15865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "76127180-b44a-4a25-adf9-6c861cbaf3b0",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Check texts/labels if visible",
              "fullTitle": "Dark Web Monitoring My Company DWM : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1523,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "37d6121d-ffd4-4a17-9fa0-2bf5940beea8",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Generate Reports",
              "fullTitle": "Dark Web Monitoring My Company DWM : Generate Reports",
              "timedOut": null,
              "duration": 3016,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "54c71865-7799-4e42-bf14-559c3ea726f6",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (OOTB) : Validate API results when generating reports",
              "fullTitle": "Dark Web Monitoring My Company DWM (OOTB) : Validate API results when generating reports",
              "timedOut": null,
              "duration": 10570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "22550689-93e0-44d5-beb3-6c54bb80e65c",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (OOTB) : Validate POST method each click event on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (OOTB) : Validate POST method each click event on table results",
              "timedOut": null,
              "duration": 853,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "751688ad-3201-44c8-8af4-eda248a93949",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Validate unregistered domain on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Validate unregistered domain on table results",
              "timedOut": null,
              "duration": 3721,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ef66eb8e-3f33-48d6-9d7a-44b148143e10",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Validate unlisted site breached on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Validate unlisted site breached on table results",
              "timedOut": null,
              "duration": 1109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "59374147-b525-410c-a88b-24d7f1a56bfe",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Invalidate searching breach date",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Invalidate searching breach date",
              "timedOut": null,
              "duration": 858,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0407b15b-1c48-4165-bdf9-13b1f54b60e6",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (EDGE) : Validate password redaction options",
              "fullTitle": "Dark Web Monitoring My Company DWM (EDGE) : Validate password redaction options",
              "timedOut": null,
              "duration": 14838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8061c009-5dbe-49ad-9c33-c840be969d42",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (EDGE) : Validate non redaction password",
              "fullTitle": "Dark Web Monitoring My Company DWM (EDGE) : Validate non redaction password",
              "timedOut": null,
              "duration": 5664,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f9d5f8e9-3c81-44eb-a8af-f9226cd512fb",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Validate column sorting",
              "fullTitle": "Dark Web Monitoring My Company DWM : Validate column sorting",
              "timedOut": null,
              "duration": 8833,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "78451798-33e1-4fa4-8c97-f03ea28d3c74",
              "parentUUID": "882d2d78-8d51-41b2-af50-eced1bdacfb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76127180-b44a-4a25-adf9-6c861cbaf3b0",
            "37d6121d-ffd4-4a17-9fa0-2bf5940beea8",
            "54c71865-7799-4e42-bf14-559c3ea726f6",
            "22550689-93e0-44d5-beb3-6c54bb80e65c",
            "751688ad-3201-44c8-8af4-eda248a93949",
            "ef66eb8e-3f33-48d6-9d7a-44b148143e10",
            "59374147-b525-410c-a88b-24d7f1a56bfe",
            "0407b15b-1c48-4165-bdf9-13b1f54b60e6",
            "8061c009-5dbe-49ad-9c33-c840be969d42",
            "f9d5f8e9-3c81-44eb-a8af-f9226cd512fb",
            "78451798-33e1-4fa4-8c97-f03ea28d3c74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 66850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b99a0a20-9877-4992-b4bb-505ba44cbe49",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/documents.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/documents.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
          "title": "Documents",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Documents: Default items should visible",
              "fullTitle": "Documents My Company Documents: Default items should visible",
              "timedOut": null,
              "duration": 16651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a2eca22f-fe6b-41b2-bfd2-91c5e8aaa53e",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Check texts/labels if visible",
              "fullTitle": "Documents My Company Documents : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2268,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56987abd-a259-457e-9806-023a59c784b1",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Adding Service Provider Documents",
              "timedOut": null,
              "duration": 22299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6438104a-ce47-4735-a796-5e2f3a1d13a0",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Validate created Service Provider Documents",
              "timedOut": null,
              "duration": 53289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 50000ms: Expected to find element: `//tbody/tr[1]/td[8]/a[1]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 50000ms: Expected to find element: `//tbody/tr[1]/td[8]/a[1]`, but never found it.\n    at companyDocuments.viewExistingSPD (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:1924:27)\n    at Context.eval (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:136:18)\n    at Context.resolveAndRunStepDefinition (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:13313:29)\n    at Context.eval (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:12634:35)",
                "diff": null
              },
              "uuid": "e5ab5cbd-54f2-406b-8299-cb100983bce4",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Edit existing Service Provider Documents",
              "timedOut": null,
              "duration": 25593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5223d395-baa3-491e-9b86-c03e89d213ef",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete existing Service Provider Documents",
              "fullTitle": "Documents My Company Documents : Delete existing Service Provider Documents",
              "timedOut": null,
              "duration": 4199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3b835206-7c0f-4f2f-a94a-900107ddec03",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Adding Disaster Recovery Plans",
              "timedOut": null,
              "duration": 10845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7827a9c4-91c5-42c3-94d6-32ed019907e1",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Validate created Disaster Recovery Plans",
              "timedOut": null,
              "duration": 2174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6b0100c2-ba9f-46f2-8163-3e822b4a9c8e",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Edit existing Disaster Recovery Plans",
              "timedOut": null,
              "duration": 6919,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "658eb356-8aa8-4ab6-a66e-eae01edcc662",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete existing Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Delete existing Disaster Recovery Plans",
              "timedOut": null,
              "duration": 4242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cb615641-49b5-44d6-9f87-06075dec99f8",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Other Documents",
              "fullTitle": "Documents My Company Documents : Adding Other Documents",
              "timedOut": null,
              "duration": 10395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bd9e2204-f055-45a5-b94c-db4aaffbf963",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Other Documents",
              "fullTitle": "Documents My Company Documents : Validate created Other Documents",
              "timedOut": null,
              "duration": 50396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 50000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 50000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.\n    at companyDocuments.viewExistingOtherDocs (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:2181:38)\n    at Context.eval (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:262:18)\n    at Context.resolveAndRunStepDefinition (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:13313:29)\n    at Context.eval (https://portal.pii-protect.com/__cypress/tests?p=cypress\\integration\\internal-bpp\\manager-admin\\my-company\\documents.feature:12634:35)",
                "diff": null
              },
              "uuid": "41c947cb-5452-477f-84f7-9578eab55718",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Other Documents",
              "fullTitle": "Documents My Company Documents : Edit existing Other Documents",
              "timedOut": null,
              "duration": 8295,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8e786e73-2562-454a-8525-e5cd6a86a504",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete Other Documents",
              "fullTitle": "Documents My Company Documents : Delete Other Documents",
              "timedOut": null,
              "duration": 4260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f962db36-fbb5-4ad2-8d24-391c60aaae22",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate existing template and categories",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate existing template and categories",
              "timedOut": null,
              "duration": 5290,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2511b27b-2c9f-44cf-806f-b7a93c522de0",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "timedOut": null,
              "duration": 3765,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8d1a15a1-7d18-4900-87ba-aa601a44e5f3",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate all required fields on adding Service Provider Contract Information",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate all required fields on adding Service Provider Contract Information",
              "timedOut": null,
              "duration": 600,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "48bae37d-6914-46d9-87ef-465bf3a6f7ff",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate email address format",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate email address format",
              "timedOut": null,
              "duration": 4408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "215aaa0b-1130-4c54-8139-9bfbbd4b8004",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Service Provider Contract Information when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Service Provider Contract Information when closing modal without saving",
              "timedOut": null,
              "duration": 20993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "458bd407-428a-4e68-85fd-d92980056434",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate Adding Disaster Recovery Plan without attachments",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate Adding Disaster Recovery Plan without attachments",
              "timedOut": null,
              "duration": 5491,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "aba12324-f968-4571-8499-7a890297b964",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Attach files on existing Disaster Recovery Plan",
              "fullTitle": "Documents My Company Documents (EDGE) : Attach files on existing Disaster Recovery Plan",
              "timedOut": null,
              "duration": 12066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "15340003-13c1-493b-9239-4d4878108f95",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Disaster Recovery Plan when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Disaster Recovery Plan when closing modal without saving",
              "timedOut": null,
              "duration": 5041,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8c8adefd-c6b2-49e0-b5c4-59abd4073588",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Validate Next Button if information details are empty in Disaster Recovery Plan",
              "fullTitle": "Documents My Company Documents (OOTB) : Validate Next Button if information details are empty in Disaster Recovery Plan",
              "timedOut": null,
              "duration": 3458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "21ad109e-44d9-4c30-a451-7ff352d206c7",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate Adding Other Documents without attachments",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate Adding Other Documents without attachments",
              "timedOut": null,
              "duration": 8105,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "798a79dd-6866-4bb0-9e98-d5063fce082b",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Attach files on Other Documents",
              "fullTitle": "Documents My Company Documents (EDGE) : Attach files on Other Documents",
              "timedOut": null,
              "duration": 14559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a8ae35d7-a26c-4a58-ac0c-b63d1eaec03f",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Other Documents when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Other Documents when closing modal without saving",
              "timedOut": null,
              "duration": 7022,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7409e19d-86a8-447e-8e73-e95316024fc1",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Validate Next Button if information details are empty in Other Documents",
              "fullTitle": "Documents My Company Documents (OOTB) : Validate Next Button if information details are empty in Other Documents",
              "timedOut": null,
              "duration": 3365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "90792f4a-9245-4386-9c94-98eaf0a2587c",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types in Other Documents",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types in Other Documents",
              "timedOut": null,
              "duration": 12889,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "49395555-bc84-4318-90ae-246e7692e858",
              "parentUUID": "e878644f-0dff-4bf1-b5fe-bca9c817bf1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2eca22f-fe6b-41b2-bfd2-91c5e8aaa53e",
            "56987abd-a259-457e-9806-023a59c784b1",
            "6438104a-ce47-4735-a796-5e2f3a1d13a0",
            "5223d395-baa3-491e-9b86-c03e89d213ef",
            "3b835206-7c0f-4f2f-a94a-900107ddec03",
            "7827a9c4-91c5-42c3-94d6-32ed019907e1",
            "6b0100c2-ba9f-46f2-8163-3e822b4a9c8e",
            "658eb356-8aa8-4ab6-a66e-eae01edcc662",
            "cb615641-49b5-44d6-9f87-06075dec99f8",
            "bd9e2204-f055-45a5-b94c-db4aaffbf963",
            "8e786e73-2562-454a-8525-e5cd6a86a504",
            "f962db36-fbb5-4ad2-8d24-391c60aaae22",
            "2511b27b-2c9f-44cf-806f-b7a93c522de0",
            "8d1a15a1-7d18-4900-87ba-aa601a44e5f3",
            "48bae37d-6914-46d9-87ef-465bf3a6f7ff",
            "215aaa0b-1130-4c54-8139-9bfbbd4b8004",
            "458bd407-428a-4e68-85fd-d92980056434",
            "aba12324-f968-4571-8499-7a890297b964",
            "15340003-13c1-493b-9239-4d4878108f95",
            "8c8adefd-c6b2-49e0-b5c4-59abd4073588",
            "21ad109e-44d9-4c30-a451-7ff352d206c7",
            "798a79dd-6866-4bb0-9e98-d5063fce082b",
            "a8ae35d7-a26c-4a58-ac0c-b63d1eaec03f",
            "7409e19d-86a8-447e-8e73-e95316024fc1",
            "90792f4a-9245-4386-9c94-98eaf0a2587c",
            "49395555-bc84-4318-90ae-246e7692e858"
          ],
          "failures": [
            "e5ab5cbd-54f2-406b-8299-cb100983bce4",
            "41c947cb-5452-477f-84f7-9578eab55718"
          ],
          "pending": [],
          "skipped": [],
          "duration": 328877,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7bb1024b-9fdd-44d4-80aa-07b1b6bdf66e",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/phishing.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/phishing.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
          "title": "Phishing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Phishing : Default items should visible",
              "fullTitle": "Phishing My Company Phishing : Default items should visible",
              "timedOut": null,
              "duration": 19681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ad3a7b94-8c24-4cee-92eb-bbfddd65419a",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Check texts/labels if visible",
              "fullTitle": "Phishing My Company Phishing : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2444,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d6fc48bc-36fb-4bf4-8845-d7977efb1ab4",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Add new Phishing Campaign",
              "fullTitle": "Phishing My Company Phishing : Add new Phishing Campaign",
              "timedOut": null,
              "duration": 42898,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "165f4512-c07d-4bc4-8b40-de00663207b4",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Validate Created Campaign",
              "fullTitle": "Phishing My Company Phishing : Validate Created Campaign",
              "timedOut": null,
              "duration": 14131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bd707902-7cdc-4c54-9875-ddb90f8d1f49",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing (NEGATIVE) : Stop Campaign",
              "fullTitle": "Phishing My Company Phishing (NEGATIVE) : Stop Campaign",
              "timedOut": null,
              "duration": 8251,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1afe09f4-e050-4949-a99a-f33eb57bd6ff",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing (NEGATIVE) : Validate stop campaign with ended status",
              "fullTitle": "Phishing My Company Phishing (NEGATIVE) : Validate stop campaign with ended status",
              "timedOut": null,
              "duration": 2148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bfa7ced0-79f9-4a1c-aee3-aeab9db1b05e",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Delete Created Campaign",
              "fullTitle": "Phishing My Company Phishing : Delete Created Campaign",
              "timedOut": null,
              "duration": 4305,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0844c85d-8b19-4729-a54b-34e4eac09582",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Add new AutoPhishing",
              "fullTitle": "Phishing My Company Phishing : Add new AutoPhishing",
              "timedOut": null,
              "duration": 37427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fde4480b-fb5b-4f1f-ba53-f4a2d8ede3ff",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Validate Created AutoPhishing",
              "fullTitle": "Phishing My Company Phishing : Validate Created AutoPhishing",
              "timedOut": null,
              "duration": 9512,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "da5d2f35-ac19-44f6-8eaa-ae9b40b90f8d",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing : Delete Created AutoPhishing",
              "fullTitle": "Phishing My Company Phishing : Delete Created AutoPhishing",
              "timedOut": null,
              "duration": 4346,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b88bc3ba-3d6b-4add-b634-1df1412b6699",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing (NEGATIVE) : Cancel Creating AutoPhish",
              "fullTitle": "Phishing My Company Phishing (NEGATIVE) : Cancel Creating AutoPhish",
              "timedOut": null,
              "duration": 8200,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f1bb17fd-d4d7-4529-b8c2-6dd4fd361317",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Phishing (OOTB) : Validate Reset Campaign",
              "fullTitle": "Phishing My Company Phishing (OOTB) : Validate Reset Campaign",
              "timedOut": null,
              "duration": 7763,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a0ede99-88d3-4920-be1b-641178a3f444",
              "parentUUID": "35ea4720-3a8d-4d1d-b85b-d233ddc18a2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad3a7b94-8c24-4cee-92eb-bbfddd65419a",
            "d6fc48bc-36fb-4bf4-8845-d7977efb1ab4",
            "165f4512-c07d-4bc4-8b40-de00663207b4",
            "bd707902-7cdc-4c54-9875-ddb90f8d1f49",
            "1afe09f4-e050-4949-a99a-f33eb57bd6ff",
            "bfa7ced0-79f9-4a1c-aee3-aeab9db1b05e",
            "0844c85d-8b19-4729-a54b-34e4eac09582",
            "fde4480b-fb5b-4f1f-ba53-f4a2d8ede3ff",
            "da5d2f35-ac19-44f6-8eaa-ae9b40b90f8d",
            "b88bc3ba-3d6b-4add-b634-1df1412b6699",
            "f1bb17fd-d4d7-4529-b8c2-6dd4fd361317",
            "1a0ede99-88d3-4920-be1b-641178a3f444"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "12e778bc-16ce-4fe8-9870-3b5a84519cef",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/policies.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d47ffbff-4351-4e13-8665-2df738932da6",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Policies : Default items should visible",
              "fullTitle": "Policy & Procedure My Company Policies : Default items should visible",
              "timedOut": null,
              "duration": 21331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "73db3120-a1eb-43e8-96c9-d94623777314",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure My Company Policies : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2569,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f50c2b77-fe86-441d-8734-8f7770bb0f11",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Existing Policy",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Existing Policy",
              "timedOut": null,
              "duration": 5432,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c83e9849-28db-45d1-a0cd-1d17ac73805f",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Download file in existing policy modal",
              "fullTitle": "Policy & Procedure My Company Policies : Download file in existing policy modal",
              "timedOut": null,
              "duration": 5175,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "472d3dde-1c1f-4ba5-8f27-6fcb917e1137",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Other Policies",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Other Policies",
              "timedOut": null,
              "duration": 4402,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "32e1a5f0-7235-4504-98c5-03d1bd8776dc",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Add New Policy",
              "fullTitle": "Policy & Procedure My Company Policies : Add New Policy",
              "timedOut": null,
              "duration": 13520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2797a6a7-61e8-4f70-8b25-89c87774c425",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Download file in Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Download file in Other Policies and Procedure",
              "timedOut": null,
              "duration": 5483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `walkme`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `walkme`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:181680:18)\n    at Object.errByPath (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:181749:10)\n    at checkForXhr (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:167393:92)\n    at https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:167416:28\n    at tryCatcher (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:13022:23)\n    at Function.Promise.attempt.Promise.try (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:10296:29)\n    at whenStable (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:173817:65)\n    at https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:173272:14\n    at tryCatcher (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:11139:18)\n    at Promise._fulfill (https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:11083:18)\n    at https://portal.pii-protect.com/__cypress/runner/cypress_runner.js:12697:46\nFrom Your Spec Code:\n    at Context.eval (https://portal.pii-protect.com/__cypress/tests?p=cypress\\support\\index.js:264:6)",
                "diff": null
              },
              "uuid": "0fae1536-8875-4e5a-80eb-7975dc9b3872",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Added Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Added Other Policies and Procedure",
              "timedOut": null,
              "duration": 14322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a870e6bf-7b8c-4ba2-bf2a-e66bcb4599bd",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Edit Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Edit Other Policies and Procedure",
              "timedOut": null,
              "duration": 10355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4e7d1bbc-6321-45a3-a1db-5b2bd2bfcec9",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Delete Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Delete Other Policies and Procedure",
              "timedOut": null,
              "duration": 4178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "84c9ab0b-5d4e-42a2-bd21-42745c04ee06",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure My Company Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 13685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5f399d99-32e7-4dd1-a67e-ad9a1471a080",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies (OOTB) : Validate API status when downloading single file",
              "fullTitle": "Policy & Procedure My Company Policies (OOTB) : Validate API status when downloading single file",
              "timedOut": null,
              "duration": 5411,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e3bf5830-61fc-43fc-b2ce-a4d4656f255b",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate Next Button if information details are empty when adding Security Policies & Procedures",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Validate Next Button if information details are empty when adding Security Policies & Procedures",
              "timedOut": null,
              "duration": 7891,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e0d515d3-ee81-4274-a379-76ea6667491b",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Discard saving new Security Policies & Procedures when closing modal",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Discard saving new Security Policies & Procedures when closing modal",
              "timedOut": null,
              "duration": 10310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "45413a71-4ef1-4fe8-81cb-5b513b32b595",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "timedOut": null,
              "duration": 5562,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "652bf0c3-f483-4ee2-b446-ac2c827e8069",
              "parentUUID": "d47ffbff-4351-4e13-8665-2df738932da6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73db3120-a1eb-43e8-96c9-d94623777314",
            "f50c2b77-fe86-441d-8734-8f7770bb0f11",
            "c83e9849-28db-45d1-a0cd-1d17ac73805f",
            "472d3dde-1c1f-4ba5-8f27-6fcb917e1137",
            "32e1a5f0-7235-4504-98c5-03d1bd8776dc",
            "2797a6a7-61e8-4f70-8b25-89c87774c425",
            "a870e6bf-7b8c-4ba2-bf2a-e66bcb4599bd",
            "4e7d1bbc-6321-45a3-a1db-5b2bd2bfcec9",
            "84c9ab0b-5d4e-42a2-bd21-42745c04ee06",
            "5f399d99-32e7-4dd1-a67e-ad9a1471a080",
            "e3bf5830-61fc-43fc-b2ce-a4d4656f255b",
            "e0d515d3-ee81-4274-a379-76ea6667491b",
            "45413a71-4ef1-4fe8-81cb-5b513b32b595",
            "652bf0c3-f483-4ee2-b446-ac2c827e8069"
          ],
          "failures": [
            "0fae1536-8875-4e5a-80eb-7975dc9b3872"
          ],
          "pending": [],
          "skipped": [],
          "duration": 129626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "94323dfc-4f24-494c-867b-d63ab02c7bc0",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/sra_report.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/sra_report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
          "title": "SRA Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company SRA Report : Default items should visible",
              "fullTitle": "SRA Report My Company SRA Report : Default items should visible",
              "timedOut": null,
              "duration": 39165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "36d27f9e-efab-4af7-8827-163eac9ff446",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Check texts/labels if visible",
              "fullTitle": "SRA Report My Company SRA Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2565,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5672d2b9-2b6a-4efa-8c8c-d637c9bc6ea7",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Add Security Incidents",
              "fullTitle": "SRA Report My Company SRA Report : Add Security Incidents",
              "timedOut": null,
              "duration": 6081,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ca689889-e2cf-46ce-8ed3-d68e6be2c29b",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Validate created SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Validate created SRA Document",
              "timedOut": null,
              "duration": 4897,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2e62ce05-6584-4293-a793-677f83c5d049",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Edit existing SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Edit existing SRA Document",
              "timedOut": null,
              "duration": 8093,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "64413b78-7fcd-4a14-a32b-cbe947a805c1",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report (OOTB) : Validate uploading oversize file",
              "fullTitle": "SRA Report My Company SRA Report (OOTB) : Validate uploading oversize file",
              "timedOut": null,
              "duration": 29055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b33a088f-645c-4ae4-9008-fdb6e7806a7c",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Delete existing SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Delete existing SRA Document",
              "timedOut": null,
              "duration": 4311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2c326a63-ab88-47b3-a6c8-24cfecfa30bf",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Download SRA Appendix",
              "fullTitle": "SRA Report My Company SRA Report : Download SRA Appendix",
              "timedOut": null,
              "duration": 2306,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "77a5b394-f69d-4477-af87-07aa6c928b28",
              "parentUUID": "4407d583-0cdc-44bf-a7dd-8818cef6546f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36d27f9e-efab-4af7-8827-163eac9ff446",
            "5672d2b9-2b6a-4efa-8c8c-d637c9bc6ea7",
            "ca689889-e2cf-46ce-8ed3-d68e6be2c29b",
            "2e62ce05-6584-4293-a793-677f83c5d049",
            "64413b78-7fcd-4a14-a32b-cbe947a805c1",
            "b33a088f-645c-4ae4-9008-fdb6e7806a7c",
            "2c326a63-ab88-47b3-a6c8-24cfecfa30bf",
            "77a5b394-f69d-4477-af87-07aa6c928b28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 96473,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1808c023-d02f-40fe-9c39-27411d165552",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/sra.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/sra.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
          "title": "SRA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company SRA : Default items should visible",
              "fullTitle": "SRA My Company SRA : Default items should visible",
              "timedOut": null,
              "duration": 13997,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28e7e3c6-6103-4f44-9bf6-b938cc0798af",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Check texts/labels if visible",
              "fullTitle": "SRA My Company SRA : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1722,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ba751282-ab5b-4331-ac5a-0e3cdf9b3873",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Name and Location",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Name and Location",
              "timedOut": null,
              "duration": 23558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4d3704fd-f084-4305-a768-20b962789ac5",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Network",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Network",
              "timedOut": null,
              "duration": 13978,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bcb98ad0-011f-4e08-a448-937c90e1cf2c",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Email",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Email",
              "timedOut": null,
              "duration": 4791,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6f9e3e53-7f4f-4e8d-ae89-b87bed2036a4",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Media and Devices",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Media and Devices",
              "timedOut": null,
              "duration": 710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "37ba2b7f-c826-4b6b-97f7-45027eac2530",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - System",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - System",
              "timedOut": null,
              "duration": 13878,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0d9fe705-e92c-42bf-bbec-1678d951c6a7",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Additional Information",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Additional Information",
              "timedOut": null,
              "duration": 2503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e7d28631-313a-4b8a-963b-8196863ba7d7",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate email address format",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate email address format",
              "timedOut": null,
              "duration": 5764,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bf2cd5d3-4263-4896-bb75-b85181911e80",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate data types in all fields in name and location tab",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate data types in all fields in name and location tab",
              "timedOut": null,
              "duration": 6453,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "533f2e8a-5e11-4a31-b65e-91f6b521f9e9",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate number fields on Network and System Tab",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate number fields on Network and System Tab",
              "timedOut": null,
              "duration": 5477,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a2a98481-2b17-41af-9aa6-037ddd080b3d",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (EDGE)  : Validate API results when saving all data in all tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (EDGE)  : Validate API results when saving all data in all tabs",
              "timedOut": null,
              "duration": 7676,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0b45ba4c-2ad7-4479-af77-85b2672bb014",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (EDGE)  : Validate saved data in previous tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (EDGE)  : Validate saved data in previous tabs",
              "timedOut": null,
              "duration": 2193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "701444b3-bcaa-474d-98ae-1e19f6f829f3",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (OOTB)  : Validate API click event when changing tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (OOTB)  : Validate API click event when changing tabs",
              "timedOut": null,
              "duration": 3619,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28519d76-6c1e-418b-af85-fa59c16f76b2",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (OOTB)  : Invalidate updating data without saving",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (OOTB)  : Invalidate updating data without saving",
              "timedOut": null,
              "duration": 15286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9e55e5ef-3864-45c8-a71e-91a60fa1c46e",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 - Answer The Security Risk Assessment Questions",
              "fullTitle": "SRA My Company SRA : Open Step 02 - Answer The Security Risk Assessment Questions",
              "timedOut": null,
              "duration": 3361,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2033fc50-69ca-4e22-8469-8126a642422f",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 - Save SRA Answers",
              "fullTitle": "SRA My Company SRA : Open Step 02 - Save SRA Answers",
              "timedOut": null,
              "duration": 111136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3371a133-5a1c-4e08-ba7f-8b0d202fdd02",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (EDGE) : Validate All list of questions based on categories",
              "fullTitle": "SRA My Company SRA : Open Step 02 (EDGE) : Validate All list of questions based on categories",
              "timedOut": null,
              "duration": 720998,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "49a014ce-833b-4608-9bfd-d87635ad8ecb",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (EDGE) : Validate API results when saving questions",
              "fullTitle": "SRA My Company SRA : Open Step 02 (EDGE) : Validate API results when saving questions",
              "timedOut": null,
              "duration": 6510,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f47fc20d-47f2-4975-98e4-a4ba3c663408",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Invalidate answers without saving",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Invalidate answers without saving",
              "timedOut": null,
              "duration": 516,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f4f3e5c7-27f2-424f-965b-4f7ce3848263",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Disable return to previous button if first question is active",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Disable return to previous button if first question is active",
              "timedOut": null,
              "duration": 2640,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "85b10ff9-a881-4738-8eb2-494ab9340a8e",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Validate save and next step button on the last question",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Validate save and next step button on the last question",
              "timedOut": null,
              "duration": 3086,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "46f4366c-6f65-4e39-88a2-20cdf173ab37",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (OOTB) : Validate API click event when changing answers",
              "fullTitle": "SRA My Company SRA : Open Step 02 (OOTB) : Validate API click event when changing answers",
              "timedOut": null,
              "duration": 39407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f1525ab6-73b0-45f4-b326-c3d2885c90d2",
              "parentUUID": "2b7ebc9c-bc32-4702-ab3d-cebfdbe0bd54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28e7e3c6-6103-4f44-9bf6-b938cc0798af",
            "ba751282-ab5b-4331-ac5a-0e3cdf9b3873",
            "4d3704fd-f084-4305-a768-20b962789ac5",
            "bcb98ad0-011f-4e08-a448-937c90e1cf2c",
            "6f9e3e53-7f4f-4e8d-ae89-b87bed2036a4",
            "37ba2b7f-c826-4b6b-97f7-45027eac2530",
            "0d9fe705-e92c-42bf-bbec-1678d951c6a7",
            "e7d28631-313a-4b8a-963b-8196863ba7d7",
            "bf2cd5d3-4263-4896-bb75-b85181911e80",
            "533f2e8a-5e11-4a31-b65e-91f6b521f9e9",
            "a2a98481-2b17-41af-9aa6-037ddd080b3d",
            "0b45ba4c-2ad7-4479-af77-85b2672bb014",
            "701444b3-bcaa-474d-98ae-1e19f6f829f3",
            "28519d76-6c1e-418b-af85-fa59c16f76b2",
            "9e55e5ef-3864-45c8-a71e-91a60fa1c46e",
            "2033fc50-69ca-4e22-8469-8126a642422f",
            "3371a133-5a1c-4e08-ba7f-8b0d202fdd02",
            "49a014ce-833b-4608-9bfd-d87635ad8ecb",
            "f47fc20d-47f2-4975-98e4-a4ba3c663408",
            "f4f3e5c7-27f2-424f-965b-4f7ce3848263",
            "85b10ff9-a881-4738-8eb2-494ab9340a8e",
            "46f4366c-6f65-4e39-88a2-20cdf173ab37",
            "f1525ab6-73b0-45f4-b326-c3d2885c90d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1009259,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6c46a2a2-cdf8-4432-b0ad-de4440c4b8f7",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/track.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/track.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
          "title": "Tracking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Track : Default items should visible",
              "fullTitle": "Tracking My Company Track : Default items should visible",
              "timedOut": null,
              "duration": 12461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b185231-fc06-4f1f-957f-5e1ea888fe8c",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Check texts/labels if visible",
              "fullTitle": "Tracking My Company Track : Check texts/labels if visible",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f1889fd-83e1-4660-b3dd-565fbbc01c52",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Add Security Incidents",
              "fullTitle": "Tracking My Company Track : Add Security Incidents",
              "timedOut": null,
              "duration": 15425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2d08e647-0bc5-41ae-9f2c-1d6d5bd393b7",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Validate created Security Incidents",
              "fullTitle": "Tracking My Company Track : Validate created Security Incidents",
              "timedOut": null,
              "duration": 1070,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "edf4976a-e9c0-4a14-be1c-52c90666877b",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Edit existing Security Incidents",
              "fullTitle": "Tracking My Company Track : Edit existing Security Incidents",
              "timedOut": null,
              "duration": 15977,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d49d1544-4cdf-4bd4-9689-37ea73817003",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Delete Security Incidents",
              "fullTitle": "Tracking My Company Track : Delete Security Incidents",
              "timedOut": null,
              "duration": 3071,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bb30d0e8-9733-4dc8-9483-63522498ee0e",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Add Server Room Access",
              "fullTitle": "Tracking My Company Track : Add Server Room Access",
              "timedOut": null,
              "duration": 7531,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a9ebe21d-a63d-4b32-85f2-6c71bf7e1ed2",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Validate Server Room Access",
              "fullTitle": "Tracking My Company Track : Validate Server Room Access",
              "timedOut": null,
              "duration": 1353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c395d0cf-71d6-46f6-84f1-871d81daadc5",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Edit Server Room Access",
              "fullTitle": "Tracking My Company Track : Edit Server Room Access",
              "timedOut": null,
              "duration": 8095,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e87d2b7c-f84b-41b7-8423-2ed7f341027b",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Delete Server Room Access",
              "fullTitle": "Tracking My Company Track : Delete Server Room Access",
              "timedOut": null,
              "duration": 3960,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "24400dd0-59bb-4219-b038-66fb84411b0f",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate Number of Records on Security Incident",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate Number of Records on Security Incident",
              "timedOut": null,
              "duration": 1982,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e4e750a5-ca72-4351-8ff8-fb5b8696503f",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Invalidate creating new Security Incident when Discovery Date is prior to Date of Incident",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Invalidate creating new Security Incident when Discovery Date is prior to Date of Incident",
              "timedOut": null,
              "duration": 1574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e94f7b4f-2807-422a-b6c3-c663c5c7cde7",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate other system involved textbox",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate other system involved textbox",
              "timedOut": null,
              "duration": 3280,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "85b81233-35e9-48d5-a7ef-01d693dcc43e",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate saving Security Incident when description of incident has 4 or more characters",
              "fullTitle": "Tracking My Company Track (OOTB): Validate saving Security Incident when description of incident has 4 or more characters",
              "timedOut": null,
              "duration": 3307,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "775a8d5f-de2d-4f15-b684-9bfdbd1d0a1f",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate API click event when closing Security Incident modal",
              "fullTitle": "Tracking My Company Track (OOTB): Validate API click event when closing Security Incident modal",
              "timedOut": null,
              "duration": 764,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fe708d27-a62d-40cf-91ef-25114422a488",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate cancelation on creating Security Incident",
              "fullTitle": "Tracking My Company Track (EDGE): Validate cancelation on creating Security Incident",
              "timedOut": null,
              "duration": 650,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f0c89b57-04d3-439e-ae7f-2fae06cacab2",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate other cause of incident textbox",
              "fullTitle": "Tracking My Company Track (EDGE): Validate other cause of incident textbox",
              "timedOut": null,
              "duration": 2617,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1936b4dc-31a5-4fb9-8b5a-8de866eccba6",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate What was changed textarea",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate What was changed textarea",
              "timedOut": null,
              "duration": 3018,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f82c6105-0c33-4f87-90f2-7ba0eb37e6e4",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate saving Server Room Access when Person accessing server room has 4 or more characters",
              "fullTitle": "Tracking My Company Track (OOTB): Validate saving Server Room Access when Person accessing server room has 4 or more characters",
              "timedOut": null,
              "duration": 1312,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9a3f580a-d7c0-43fa-83ea-dd577c4dd384",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate API click event when closing and open Server Room Access modal",
              "fullTitle": "Tracking My Company Track (OOTB): Validate API click event when closing and open Server Room Access modal",
              "timedOut": null,
              "duration": 731,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de16fe93-8c8e-41c3-a37b-e849e571bfa2",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate cancelation on creating Server Room Access",
              "fullTitle": "Tracking My Company Track (EDGE): Validate cancelation on creating Server Room Access",
              "timedOut": null,
              "duration": 646,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fd785fc2-d7c5-41fc-a9b0-aea8194f5e1a",
              "parentUUID": "64ae81fe-99e4-4ad3-ac66-046c2d691501",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b185231-fc06-4f1f-957f-5e1ea888fe8c",
            "0f1889fd-83e1-4660-b3dd-565fbbc01c52",
            "2d08e647-0bc5-41ae-9f2c-1d6d5bd393b7",
            "edf4976a-e9c0-4a14-be1c-52c90666877b",
            "d49d1544-4cdf-4bd4-9689-37ea73817003",
            "bb30d0e8-9733-4dc8-9483-63522498ee0e",
            "a9ebe21d-a63d-4b32-85f2-6c71bf7e1ed2",
            "c395d0cf-71d6-46f6-84f1-871d81daadc5",
            "e87d2b7c-f84b-41b7-8423-2ed7f341027b",
            "24400dd0-59bb-4219-b038-66fb84411b0f",
            "e4e750a5-ca72-4351-8ff8-fb5b8696503f",
            "e94f7b4f-2807-422a-b6c3-c663c5c7cde7",
            "85b81233-35e9-48d5-a7ef-01d693dcc43e",
            "775a8d5f-de2d-4f15-b684-9bfdbd1d0a1f",
            "fe708d27-a62d-40cf-91ef-25114422a488",
            "f0c89b57-04d3-439e-ae7f-2fae06cacab2",
            "1936b4dc-31a5-4fb9-8b5a-8de866eccba6",
            "f82c6105-0c33-4f87-90f2-7ba0eb37e6e4",
            "9a3f580a-d7c0-43fa-83ea-dd577c4dd384",
            "de16fe93-8c8e-41c3-a37b-e849e571bfa2",
            "fd785fc2-d7c5-41fc-a9b0-aea8194f5e1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 89033,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "723a749b-ce91-41f9-abb1-a8beb0524d7a",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-company/training_reports.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-company/training_reports.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cffa42b5-bc1c-4920-87c5-5237615ff6e6",
          "title": "Training Reports",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Training Reports : Default items should visible",
              "fullTitle": "Training Reports My Company Training Reports : Default items should visible",
              "timedOut": null,
              "duration": 17716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "094158ec-cda1-47ae-b1be-ac4f6c0d18a0",
              "parentUUID": "cffa42b5-bc1c-4920-87c5-5237615ff6e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Check texts/labels if visible",
              "fullTitle": "Training Reports My Company Training Reports : Check texts/labels if visible",
              "timedOut": null,
              "duration": 863,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "02259241-6883-4b53-805f-388226e90c89",
              "parentUUID": "cffa42b5-bc1c-4920-87c5-5237615ff6e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Download Annual Training Report",
              "fullTitle": "Training Reports My Company Training Reports : Download Annual Training Report",
              "timedOut": null,
              "duration": 2450,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56182d5c-7d6f-45e4-a872-92f2aa189f4d",
              "parentUUID": "cffa42b5-bc1c-4920-87c5-5237615ff6e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : View Micro Training",
              "timedOut": null,
              "duration": 20245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9e17fcca-a561-4162-8350-d78cce1c20ff",
              "parentUUID": "cffa42b5-bc1c-4920-87c5-5237615ff6e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Download Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : Download Micro Training",
              "timedOut": null,
              "duration": 14324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e3039d7f-6d79-4957-868f-691e32eb3bad",
              "parentUUID": "cffa42b5-bc1c-4920-87c5-5237615ff6e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "094158ec-cda1-47ae-b1be-ac4f6c0d18a0",
            "02259241-6883-4b53-805f-388226e90c89",
            "56182d5c-7d6f-45e4-a872-92f2aa189f4d",
            "9e17fcca-a561-4162-8350-d78cce1c20ff",
            "e3039d7f-6d79-4957-868f-691e32eb3bad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 55598,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66c8c390-a265-46d5-a089-dab0f06974aa",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-dashboard/manager-admin-dark-web.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-dashboard/manager-admin-dark-web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
          "title": "Dark Web - Run DWBA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Dark Web : Default items should visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Default items should visible",
              "timedOut": null,
              "duration": 12036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a33fa9c-61dd-4386-9f0e-79bf86a47028",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Check texts/labels if visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Check texts/labels if visible",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8cd7408d-4306-4561-b93d-7ded448149d7",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "timedOut": null,
              "duration": 6489,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a4dc9239-0635-46cc-8ecf-a6663b5c0e12",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "timedOut": null,
              "duration": 2230,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d9df87f0-5c32-4772-86d7-c6d6f7883c0c",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6432f81d-4f3f-4d2e-8c3c-a47fe3129287",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "250e78e4-1452-48cd-8557-0fc5477bd32b",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "timedOut": null,
              "duration": 7196,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ddd50d7e-52ca-4cbe-9911-5725cbc37fc9",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "timedOut": null,
              "duration": 4536,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "561843e5-cd57-4079-a1f5-61a48cd928e7",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "timedOut": null,
              "duration": 3014,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc9a66ed-7fa9-4955-a6d3-06b34888103b",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "timedOut": null,
              "duration": 8035,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c26b32ff-16c5-4863-8716-058883ee1100",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "timedOut": null,
              "duration": 1935,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4420a570-dfd3-4c1c-aca0-761c766ac9f5",
              "parentUUID": "9e6c832a-69a3-4673-aa0d-cd6bbc8426d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a33fa9c-61dd-4386-9f0e-79bf86a47028",
            "8cd7408d-4306-4561-b93d-7ded448149d7",
            "a4dc9239-0635-46cc-8ecf-a6663b5c0e12",
            "d9df87f0-5c32-4772-86d7-c6d6f7883c0c",
            "6432f81d-4f3f-4d2e-8c3c-a47fe3129287",
            "250e78e4-1452-48cd-8557-0fc5477bd32b",
            "ddd50d7e-52ca-4cbe-9911-5725cbc37fc9",
            "561843e5-cd57-4079-a1f5-61a48cd928e7",
            "bc9a66ed-7fa9-4955-a6d3-06b34888103b",
            "c26b32ff-16c5-4863-8716-058883ee1100",
            "4420a570-dfd3-4c1c-aca0-761c766ac9f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b8bd7efc-fb90-422e-8cb5-e3d88c8694d4",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-dashboard/manager-admin-dashboard.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-dashboard/manager-admin-dashboard.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
          "title": "Manager Admin - My Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Company Average Employee Secure Score (ESS) : Default items should visible",
              "fullTitle": "Manager Admin - My Dashboard Company Average Employee Secure Score (ESS) : Default items should visible",
              "timedOut": null,
              "duration": 15431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "354e917a-7b37-4cd9-a17a-d838973c4873",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "fullTitle": "Manager Admin - My Dashboard Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b82ed2e2-7413-45dd-b4b8-c19c05ab8013",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Default items should visible",
              "fullTitle": "Manager Admin - My Dashboard Company Average ESS Trend : Default items should visible",
              "timedOut": null,
              "duration": 4613,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d39147a5-815b-491c-aef3-40f06b0fbe52",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Check texts/labels if visible",
              "fullTitle": "Manager Admin - My Dashboard Company Average ESS Trend : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4cbae40a-a00b-4991-97b7-eea3519602eb",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Default items should visible",
              "fullTitle": "Manager Admin - My Dashboard Improve your ESS : Default items should visible",
              "timedOut": null,
              "duration": 2360,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "546e0136-666f-40ba-8569-7217e3fc7d44",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Check texts/labels if visible",
              "fullTitle": "Manager Admin - My Dashboard Improve your ESS : Check texts/labels if visible",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "876f6d94-cfaa-45cd-b382-960b62f9910a",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Default items should visible",
              "fullTitle": "Manager Admin - My Dashboard External Data Breaches : Default items should visible",
              "timedOut": null,
              "duration": 2418,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51a560b2-2159-40bd-b61a-d86b40cdc16b",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Check texts/labels if visible",
              "fullTitle": "Manager Admin - My Dashboard External Data Breaches : Check texts/labels if visible",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "16c1b73c-2ad8-493b-b617-de4087306339",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Default items should visible",
              "fullTitle": "Manager Admin - My Dashboard Chart Bar : Default items should visible",
              "timedOut": null,
              "duration": 2398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "19ec8952-ccdf-46cd-9159-7b826df36953",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Check texts/labels if visible",
              "fullTitle": "Manager Admin - My Dashboard Chart Bar : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "22844cc9-5d62-4b48-ae5b-2092f8d99886",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Default items should visible",
              "fullTitle": "Manager Admin - My Dashboard Leaderboard : Default items should visible",
              "timedOut": null,
              "duration": 2365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a843c1a-f835-4a37-b618-a3850d324a97",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Check texts/labels if visible",
              "fullTitle": "Manager Admin - My Dashboard Leaderboard : Check texts/labels if visible",
              "timedOut": null,
              "duration": 3603,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a9641072-9fb6-49bf-9d0f-7be9f7fe9890",
              "parentUUID": "9aa93971-fd15-41e5-87f1-e36f7efb58b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "354e917a-7b37-4cd9-a17a-d838973c4873",
            "b82ed2e2-7413-45dd-b4b8-c19c05ab8013",
            "d39147a5-815b-491c-aef3-40f06b0fbe52",
            "4cbae40a-a00b-4991-97b7-eea3519602eb",
            "546e0136-666f-40ba-8569-7217e3fc7d44",
            "876f6d94-cfaa-45cd-b382-960b62f9910a",
            "51a560b2-2159-40bd-b61a-d86b40cdc16b",
            "16c1b73c-2ad8-493b-b617-de4087306339",
            "19ec8952-ccdf-46cd-9159-7b826df36953",
            "22844cc9-5d62-4b48-ae5b-2092f8d99886",
            "5a843c1a-f835-4a37-b618-a3850d324a97",
            "a9641072-9fb6-49bf-9d0f-7be9f7fe9890"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38744,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d27dcfac-ac1a-4edb-b745-cbcfe308e3a2",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/my-dashboard/manager-admin-policies.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/my-dashboard/manager-admin-policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset P & P : Reset Policies",
              "fullTitle": "Policy & Procedure Reset P & P : Reset Policies",
              "timedOut": null,
              "duration": 19106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0a8512bb-b05b-4264-b819-4b9a8b5c8aef",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Reset Other Policies",
              "fullTitle": "Policy & Procedure Reset P & P : Reset Other Policies",
              "timedOut": null,
              "duration": 8552,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5e970406-093e-4b80-95c1-182d42fc158f",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Default items should visible",
              "fullTitle": "Policy & Procedure Reset P & P : Default items should visible",
              "timedOut": null,
              "duration": 10276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a2a2edd6-8677-4329-a5d9-57a82c953278",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure Reset P & P : Check texts/labels if visible",
              "timedOut": null,
              "duration": 422,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "64456959-b03b-406d-a560-c48d7254c6df",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acknowledge All policies",
              "fullTitle": "Policy & Procedure Acknowledge All policies",
              "timedOut": null,
              "duration": 7626,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ac151a9c-6457-46af-bac1-aa5a497e7644",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acknowledge All other policies",
              "fullTitle": "Policy & Procedure Acknowledge All other policies",
              "timedOut": null,
              "duration": 7725,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "34111c89-3aea-44f5-97d7-ff107eaee0f1",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 8988,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a323f0df-ca36-4fa7-9c6c-4b98e8efb5bc",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "timedOut": null,
              "duration": 14216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8ce90d73-f496-4a0a-8e70-b3341d4e6745",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "timedOut": null,
              "duration": 4459,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6c9c141b-07f0-434f-917d-60b901380748",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "timedOut": null,
              "duration": 8552,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d120cb4f-de69-4fcd-bf26-814c05a7b93a",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate existing policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate existing policies via modal",
              "timedOut": null,
              "duration": 6053,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a9e1ee45-465b-4e46-8ebf-a3cbf632416b",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate other policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate other policies via modal",
              "timedOut": null,
              "duration": 7605,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "771fdd3e-c9ba-460b-b89d-1fcbbf5360d5",
              "parentUUID": "45fbde9e-41c6-481a-bf83-b564954cbd3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a8512bb-b05b-4264-b819-4b9a8b5c8aef",
            "5e970406-093e-4b80-95c1-182d42fc158f",
            "a2a2edd6-8677-4329-a5d9-57a82c953278",
            "64456959-b03b-406d-a560-c48d7254c6df",
            "ac151a9c-6457-46af-bac1-aa5a497e7644",
            "34111c89-3aea-44f5-97d7-ff107eaee0f1",
            "a323f0df-ca36-4fa7-9c6c-4b98e8efb5bc",
            "8ce90d73-f496-4a0a-8e70-b3341d4e6745",
            "6c9c141b-07f0-434f-917d-60b901380748",
            "d120cb4f-de69-4fcd-bf26-814c05a7b93a",
            "a9e1ee45-465b-4e46-8ebf-a3cbf632416b",
            "771fdd3e-c9ba-460b-b89d-1fcbbf5360d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103580,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3c106145-8f40-4f48-acef-6c783771c8d4",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/partner-profile/billing-report.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/partner-profile/billing-report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b2dc214-4d37-489d-b94c-be6751442e60",
          "title": "PA Billing Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PA Billing Report : Default items should visible",
              "fullTitle": "PA Billing Report PA Billing Report : Default items should visible",
              "timedOut": null,
              "duration": 12563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "689d9bc7-1a1e-4caa-b9d3-74dc296ff711",
              "parentUUID": "7b2dc214-4d37-489d-b94c-be6751442e60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report : Check texts/labels if visible",
              "fullTitle": "PA Billing Report PA Billing Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "40b758ce-b314-4576-a4e5-7eb92f397e64",
              "parentUUID": "7b2dc214-4d37-489d-b94c-be6751442e60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download Billing statement",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download Billing statement",
              "timedOut": null,
              "duration": 9643,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "298c5757-f871-4a51-b619-243ecfd540ad",
              "parentUUID": "7b2dc214-4d37-489d-b94c-be6751442e60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download XLS File",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download XLS File",
              "timedOut": null,
              "duration": 2653,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "97be9a45-ce82-4a9a-b372-b7a290824597",
              "parentUUID": "7b2dc214-4d37-489d-b94c-be6751442e60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "689d9bc7-1a1e-4caa-b9d3-74dc296ff711",
            "40b758ce-b314-4576-a4e5-7eb92f397e64",
            "298c5757-f871-4a51-b619-243ecfd540ad",
            "97be9a45-ce82-4a9a-b372-b7a290824597"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25073,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "473387d1-bd42-4f89-9db7-cdfda2c53efa",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/manager-admin/general.feature",
      "file": "cypress/integration/internal-bpp/manager-admin/general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "04b55d8a-6469-4b96-811b-1296d681ef91",
          "title": "General - Manager Admin",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Manager Admin Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 15673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7f1ca1e8-8f3c-41e5-ba8b-d0b7996560ce",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Manager Admin Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "46105d9e-50cc-42de-8ad0-d1b60b41f5a8",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Manager Admin Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 12119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f4385a55-7a5c-472a-bc67-6c9e5c476370",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Manager Admin My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 2961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f20c315-4295-4616-966e-026fefab3a8d",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Manager Admin My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ff59696a-3220-4d22-8f43-0cfb7e07b83b",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Manager Admin My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 6977,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4d3f2c17-4ec9-456d-a63a-65818b36754f",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "fullTitle": "General - Manager Admin My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "timedOut": null,
              "duration": 3400,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b63dcc27-96f9-4ad1-9b8d-a52c27734692",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Manager Admin My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 1471,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "978c2117-8499-43ca-a833-e4175f467c27",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Manager Admin My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 4458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2f0ead9b-b246-4375-97a8-78703f463b49",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Manager Admin My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 3324,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a50b073-0c09-441d-9d9e-01bbeb4980d9",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Manager Admin My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 815,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6ab030b7-9845-4170-b3a2-bd632fba798b",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Manager Admin My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 719,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7087a8f5-4ce4-4d6e-a966-8fce1d0f2929",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Manager Admin My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 8019,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a6952e29-0736-4ae3-84b3-a5e93635e3f9",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Manager Admin My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "70c7def2-af21-4618-8efa-3d5a5b1ef4bd",
              "parentUUID": "04b55d8a-6469-4b96-811b-1296d681ef91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f1ca1e8-8f3c-41e5-ba8b-d0b7996560ce",
            "46105d9e-50cc-42de-8ad0-d1b60b41f5a8",
            "f4385a55-7a5c-472a-bc67-6c9e5c476370",
            "9f20c315-4295-4616-966e-026fefab3a8d",
            "ff59696a-3220-4d22-8f43-0cfb7e07b83b",
            "4d3f2c17-4ec9-456d-a63a-65818b36754f",
            "b63dcc27-96f9-4ad1-9b8d-a52c27734692",
            "978c2117-8499-43ca-a833-e4175f467c27",
            "2f0ead9b-b246-4375-97a8-78703f463b49",
            "1a50b073-0c09-441d-9d9e-01bbeb4980d9",
            "6ab030b7-9845-4170-b3a2-bd632fba798b",
            "7087a8f5-4ce4-4d6e-a966-8fce1d0f2929",
            "a6952e29-0736-4ae3-84b3-a5e93635e3f9",
            "70c7def2-af21-4618-8efa-3d5a5b1ef4bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}